keys = {
    ' ' : lambda : [keyboard.press(K.SPACE), keyboard.release(K.SPACE)],
    '!' : lambda : [keyboard.press(K.SHIFT), keyboard.press(K.ONE), keyboard.release(K.ONE), keyboard.release(K.SHIFT)],
    '"' : lambda : [keyboard.press(K.SHIFT), keyboard.press(K.TWO), keyboard.release(K.TWO), keyboard.release(K.SHIFT)],
    '#' : lambda : [keyboard.press(K.RIGHT_ALT), keyboard.press(K.QUOTE), keyboard.release(K.QUOTE), keyboard.release(K.RIGHT_ALT)],
    '$' : lambda : [keyboard.press(K.SHIFT), keyboard.press(K.FOUR), keyboard.release(K.FOUR), keyboard.release(K.SHIFT)],
    '%' : lambda : [keyboard.press(K.SHIFT), keyboard.press(K.FIVE), keyboard.release(K.FIVE), keyboard.release(K.SHIFT)],
    '&' : lambda : [keyboard.press(K.SHIFT), keyboard.press(K.SIX), keyboard.release(K.SIX), keyboard.release(K.SHIFT)],
    "'" : lambda : [keyboard.press(K.MINUS), keyboard.release(K.MINUS)],
    '(' : lambda : [keyboard.press(K.SHIFT), keyboard.press(K.EIGHT), keyboard.release(K.EIGHT), keyboard.release(K.SHIFT)],
    ')' : lambda : [keyboard.press(K.SHIFT), keyboard.press(K.NINE), keyboard.release(K.NINE), keyboard.release(K.SHIFT)],
    '*' : lambda : [keyboard.press(K.SHIFT), keyboard.press(K.RIGHT_BRACKET), keyboard.release(K.RIGHT_BRACKET), keyboard.release(K.SHIFT)],
    '+' : lambda : [keyboard.press(K.RIGHT_BRACKET), keyboard.release(K.RIGHT_BRACKET)],
    ',' : lambda : [keyboard.press(K.COMMA), keyboard.release(K.COMMA)],
    '-' : lambda : [keyboard.press(K.FORWARD_SLASH), keyboard.release(K.FORWARD_SLASH)],
    '.' : lambda : [keyboard.press(K.PERIOD), keyboard.release(K.PERIOD)],
    '/' : lambda : [keyboard.press(K.SHIFT), keyboard.press(K.SEVEN), keyboard.release(K.SEVEN), keyboard.release(K.SHIFT)],
    '0' : lambda : [keyboard.press(K.ZERO), keyboard.release(K.ZERO)],
    '1' : lambda : [keyboard.press(K.ONE), keyboard.release(K.ONE)],
    '2' : lambda : [keyboard.press(K.TWO), keyboard.release(K.TWO)],
    '3' : lambda : [keyboard.press(K.THREE), keyboard.release(K.THREE)],
    '4' : lambda : [keyboard.press(K.FOUR), keyboard.release(K.FOUR)],
    '5' : lambda : [keyboard.press(K.FIVE), keyboard.release(K.FIVE)],
    '6' : lambda : [keyboard.press(K.SIX), keyboard.release(K.SIX)],
    '7' : lambda : [keyboard.press(K.SEVEN), keyboard.release(K.SEVEN)],
    '8' : lambda : [keyboard.press(K.EIGHT), keyboard.release(K.EIGHT)],
    '9' : lambda : [keyboard.press(K.NINE), keyboard.release(K.NINE)],
    ':' : lambda : [keyboard.press(K.SHIFT), keyboard.press(K.PERIOD), keyboard.release(K.PERIOD), keyboard.release(K.SHIFT)],
    ';' : lambda : [keyboard.press(K.SHIFT), keyboard.press(K.COMMA), keyboard.release(K.COMMA), keyboard.release(K.SHIFT)],
    '<' : lambda : [keyboard.press(K.SHIFT), keyboard.press(K.COMMA), keyboard.release(K.COMMA), keyboard.release(K.SHIFT)],
    '=' : lambda : [keyboard.press(K.ZERO), keyboard.release(K.ZERO)],
    '>' : lambda : [keyboard.press(K.SHIFT), keyboard.press(K.DOT), keyboard.release(K.DOT), keyboard.release(K.SHIFT)],
    '?' : lambda : [keyboard.press(K.SHIFT), keyboard.press(K.MINUS), keyboard.release(K.MINUS), keyboard.release(K.SHIFT)],
    '@' : lambda : [keyboard.press(K.RIGHT_ALT), keyboard.press(K.SEMICOLON), keyboard.release(K.SEMICOLON), keyboard.release(K.RIGHT_ALT)],
    'A' : lambda : [keyboard.press(K.SHIFT), keyboard.press(K.A), keyboard.release(K.A), keyboard.release(K.SHIFT)],
    'B' : lambda : [keyboard.press(K.SHIFT), keyboard.press(K.B), keyboard.release(K.B), keyboard.release(K.SHIFT)],
    'C' : lambda : [keyboard.press(K.SHIFT), keyboard.press(K.C), keyboard.release(K.C), keyboard.release(K.SHIFT)],
    'D' : lambda : [keyboard.press(K.SHIFT), keyboard.press(K.D), keyboard.release(K.D), keyboard.release(K.SHIFT)],
    'E' : lambda : [keyboard.press(K.SHIFT), keyboard.press(K.E), keyboard.release(K.E), keyboard.release(K.SHIFT)],
    'F' : lambda : [keyboard.press(K.SHIFT), keyboard.press(K.F), keyboard.release(K.F), keyboard.release(K.SHIFT)],
    'G' : lambda : [keyboard.press(K.SHIFT), keyboard.press(K.G), keyboard.release(K.G), keyboard.release(K.SHIFT)],
    'H' : lambda : [keyboard.press(K.SHIFT), keyboard.press(K.H), keyboard.release(K.H), keyboard.release(K.SHIFT)],
    'I' : lambda : [keyboard.press(K.SHIFT), keyboard.press(K.I), keyboard.release(K.I), keyboard.release(K.SHIFT)],
    'J' : lambda : [keyboard.press(K.SHIFT), keyboard.press(K.J), keyboard.release(K.J), keyboard.release(K.SHIFT)],
    'K' : lambda : [keyboard.press(K.SHIFT), keyboard.press(K.K), keyboard.release(K.K), keyboard.release(K.SHIFT)],
    'L' : lambda : [keyboard.press(K.SHIFT), keyboard.press(K.L), keyboard.release(K.L), keyboard.release(K.SHIFT)],
    'M' : lambda : [keyboard.press(K.SHIFT), keyboard.press(K.M), keyboard.release(K.M), keyboard.release(K.SHIFT)],
    'N' : lambda : [keyboard.press(K.SHIFT), keyboard.press(K.N), keyboard.release(K.N), keyboard.release(K.SHIFT)],
    'O' : lambda : [keyboard.press(K.SHIFT), keyboard.press(K.O), keyboard.release(K.O), keyboard.release(K.SHIFT)],
    'P' : lambda : [keyboard.press(K.SHIFT), keyboard.press(K.P), keyboard.release(K.P), keyboard.release(K.SHIFT)],
    'Q' : lambda : [keyboard.press(K.SHIFT), keyboard.press(K.Q), keyboard.release(K.Q), keyboard.release(K.SHIFT)],
    'R' : lambda : [keyboard.press(K.SHIFT), keyboard.press(K.R), keyboard.release(K.R), keyboard.release(K.SHIFT)],
    'S' : lambda : [keyboard.press(K.SHIFT), keyboard.press(K.S), keyboard.release(K.S), keyboard.release(K.SHIFT)],
    'T' : lambda : [keyboard.press(K.SHIFT), keyboard.press(K.T), keyboard.release(K.T), keyboard.release(K.SHIFT)],
    'U' : lambda : [keyboard.press(K.SHIFT), keyboard.press(K.U), keyboard.release(K.U), keyboard.release(K.SHIFT)],
    'V' : lambda : [keyboard.press(K.SHIFT), keyboard.press(K.V), keyboard.release(K.V), keyboard.release(K.SHIFT)],
    'W' : lambda : [keyboard.press(K.SHIFT), keyboard.press(K.W), keyboard.release(K.W), keyboard.release(K.SHIFT)],
    'X' : lambda : [keyboard.press(K.SHIFT), keyboard.press(K.X), keyboard.release(K.X), keyboard.release(K.SHIFT)],
    'Y' : lambda : [keyboard.press(K.SHIFT), keyboard.press(K.Y), keyboard.release(K.Y), keyboard.release(K.SHIFT)],
    'Z' : lambda : [keyboard.press(K.SHIFT), keyboard.press(K.Z), keyboard.release(K.Z), keyboard.release(K.SHIFT)],
    '[' : lambda : [keyboard.press(K.RIGHT_ALT), keyboard.press(K.LEFT_BRACKET), keyboard.release(K.LEFT_BRACKET), keyboard.release(K.RIGHT_ALT)],
    '\\': lambda : [keyboard.press(K.GRAVE), keyboard.release(K.GRAVE)],
    ']' : lambda : [keyboard.press(K.RIGHT_BRACKET), keyboard.release(K.RIGHT_BRACKET)],
    '^' : lambda : [keyboard.press(K.SHIFT), keyboard.press(K.SIX), keyboard.release(K.SIX), keyboard.release(K.SHIFT)],
    '_' : lambda : [keyboard.press(K.SHIFT), keyboard.press(K.FORWARD_SLASH), keyboard.release(K.FORWARD_SLASH), keyboard.release(K.SHIFT)],
    '`' : lambda : [keyboard.press(K.GRAVE), keyboard.release(K.GRAVE)],
    'a' : lambda : [keyboard.press(K.A), keyboard.release(K.A)],
    'b' : lambda : [keyboard.press(K.B), keyboard.release(K.B)],
    'c' : lambda : [keyboard.press(K.C), keyboard.release(K.C)],
    'd' : lambda : [keyboard.press(K.D), keyboard.release(K.D)],
    'e' : lambda : [keyboard.press(K.E), keyboard.release(K.E)],
    'f' : lambda : [keyboard.press(K.F), keyboard.release(K.F)],
    'g' : lambda : [keyboard.press(K.G), keyboard.release(K.G)],
    'h' : lambda : [keyboard.press(K.H), keyboard.release(K.H)],
    'i' : lambda : [keyboard.press(K.I), keyboard.release(K.I)],
    'j' : lambda : [keyboard.press(K.J), keyboard.release(K.J)],
    'k' : lambda : [keyboard.press(K.K), keyboard.release(K.K)],
    'l' : lambda : [keyboard.press(K.L), keyboard.release(K.L)],
    'm' : lambda : [keyboard.press(K.M), keyboard.release(K.M)],
    'n' : lambda : [keyboard.press(K.N), keyboard.release(K.N)],
    'o' : lambda : [keyboard.press(K.O), keyboard.release(K.O)],
    'p' : lambda : [keyboard.press(K.P), keyboard.release(K.P)],
    'q' : lambda : [keyboard.press(K.Q), keyboard.release(K.Q)],
    'r' : lambda : [keyboard.press(K.R), keyboard.release(K.R)],
    's' : lambda : [keyboard.press(K.S), keyboard.release(K.S)],
    't' : lambda : [keyboard.press(K.T), keyboard.release(K.T)],
    'u' : lambda : [keyboard.press(K.U), keyboard.release(K.U)],
    'v' : lambda : [keyboard.press(K.V), keyboard.release(K.V)],
    'w' : lambda : [keyboard.press(K.W), keyboard.release(K.W)],
    'x' : lambda : [keyboard.press(K.X), keyboard.release(K.X)],
    'y' : lambda : [keyboard.press(K.Y), keyboard.release(K.Y)],
    'z' : lambda : [keyboard.press(K.Z), keyboard.release(K.Z)],
    '{' : lambda : [keyboard.press(K.RIGHT_ALT), keyboard.press(K.SHIFT), keyboard.press(K.LEFT_BRACKET), keyboard.release(K.LEFT_BRACKET), keyboard.release(K.SHIFT), keyboard.release(K.RIGHT_ALT)],
    '|' : lambda : [keyboard.press(K.SHIFT), keyboard.press(K.GRAVE), keyboard.release(K.GRAVE), keyboard.release(K.SHIFT)],
    '}' : lambda : [keyboard.press(K.RIGHT_ALT), keyboard.press(K.SHIFT), keyboard.press(K.RIGHT_BRACKET), keyboard.release(K.RIGHT_BRACKET), keyboard.release(K.SHIFT), keyboard.release(K.RIGHT_ALT)],
    '~' : lambda : [keyboard.press(K.SHIFT), keyboard.press(K.GRAVE), keyboard.release(K.GRAVE), keyboard.release(K.SHIFT)],
}
